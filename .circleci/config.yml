version: 2.1

orbs:
  node: electronjs/node@2.2.0

commands:
  install:
    parameters:
      arch:
        type: enum
        enum: ['', 'arm64', 'x86_64']
        default: ''
    steps:
      - run: git config --global core.autocrlf input
      - node/install:
          arch: << parameters.arch >>
          node-version: '18.17'
      - checkout
      - node/install-packages:
          cache-version: v6
      - run: yarn run contributors
      - run: yarn run electron-releases
  test:
    steps:
      - run:
          command: yarn test:ci
          environment:
            JEST_JUNIT_OUTPUT_DIR: ./reports/
      - store_test_results:
          path: ./reports/

executors:
  macos:
    macos:
      xcode: "14.3.1"

    resource_class: macos.x86.medium.gen2

jobs:
  lint:
    docker:
      - image: cimg/base:stable
    steps:
      - install
      - run: yarn run lint
  mac-test:
    parameters:
      arch:
        type: enum
        enum: [ 'x64' ]
    executor: macos
    steps:
      - install
      - test
  win-test:
    parameters:
      arch:
        type: enum
        enum: [ 'x64', 'arm64', 'ia32' ]
    executor: node/windows
    steps:
      - install
      - test
  linux-test:
    parameters:
      arch:
        type: enum
        enum: [ 'x64', 'arm64','armv7l' ]
    executor: node/linux
    steps:
      - install
      - test
  mac-build:
    parameters:
      arch:
        type: enum
        enum: [ 'x64' ]
    executor: macos
    steps:
      - install
      - run: npx yarn run publish --arch=<< parameters.arch >> --dry-run
      - store_artifacts:
          path: out
      - persist_to_workspace:
          root: .
          paths:
            - out
  win-build:
    parameters:
      arch:
        type: enum
        enum: [ 'x64', 'arm64', 'ia32' ]
    executor: node/windows
    steps:
      - install
      - run: 
          name: npx yarn run publish
          shell: powershell.exe
          command: npx yarn run publish --arch=<< parameters.arch >> --dry-run
      - store_artifacts:
          path: out
      - persist_to_workspace:
          root: .
          paths:
            - out
  linux-build:
    parameters:
      arch:
        type: enum
        enum: [ 'x64', 'arm64','armv7l' ]
    executor: node/linux
    resource_class: medium+
    steps:
      - run: sudo apt-get update && sudo apt install rpm squashfs-tools
      - install
      - run: npx yarn run publish --arch=<< parameters.arch >> --dry-run
      # CircleCI doesn't let you persist files with the same name from multiple
      # jobs, so only persist the .webpack path from the x64 linux-build job
      - when:
          condition:
            not:
              equal: [ << parameters.arch >>, x64 ]
          steps:
            - run: rm -rf .webpack/*
      - store_artifacts:
          path: out
      - persist_to_workspace:
          root: .
          paths:
            - out
            - .webpack
  publish-to-github:
    docker:
      - image: cimg/base:stable
    steps:
      - install
      - attach_workspace:
          at: .
      - run: yarn run publish --from-dry-run

workflows:
  build-and-test:
    jobs:
      - lint
      - mac-test:
          matrix:
            parameters:
              arch: [ x64 ]
      - win-test:
          matrix:
            parameters:
              arch: [ x64 ]
      - linux-test:
          matrix:
            parameters:
              arch: [ x64 ]
      - mac-build:
          matrix:
            parameters:
              arch: [ x64 ]
          filters:
            tags:
              only: 
                - /^v.*/
            branches:
              ignore: /.*/
      - win-build:
          matrix:
            parameters:
              arch: [ x64, ia32 ]
          filters:
            tags:
              only: 
                - /^v.*/
            branches:
              ignore: /.*/
      - linux-build:
          matrix:
            parameters:
              arch: [ x64, arm64, armv7l ]
          filters:
            tags:
              only: 
                - /^v.*/
            branches:
              ignore: /.*/
      - publish-to-github:
          requires:
            - lint
            - mac-test
            - win-test
            - linux-test
            - mac-build
            - win-build
            - linux-build
          filters:
            tags:
              only: 
                - /^v.*/
            branches:
              ignore: /.*/
