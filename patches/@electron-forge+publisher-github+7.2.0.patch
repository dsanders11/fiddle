diff --git a/node_modules/@electron-forge/publisher-github/dist/Config.d.ts b/node_modules/@electron-forge/publisher-github/dist/Config.d.ts
index f63fb08..13d9631 100644
--- a/node_modules/@electron-forge/publisher-github/dist/Config.d.ts
+++ b/node_modules/@electron-forge/publisher-github/dist/Config.d.ts
@@ -45,5 +45,9 @@ export interface PublisherGitHubConfig {
      * Re-upload the new asset if you upload an asset with the same filename as existing asset
      */
     force?: boolean;
+    /**
+     * Whether to automatically generate release notes for the release
+     */
+    generateReleaseNotes?: boolean;
 }
 //# sourceMappingURL=Config.d.ts.map
\ No newline at end of file
diff --git a/node_modules/@electron-forge/publisher-github/dist/Config.d.ts.map b/node_modules/@electron-forge/publisher-github/dist/Config.d.ts.map
index 3839817..1d9dc40 100644
--- a/node_modules/@electron-forge/publisher-github/dist/Config.d.ts.map
+++ b/node_modules/@electron-forge/publisher-github/dist/Config.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"Config.d.ts","sourceRoot":"","sources":["../src/Config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAElE,MAAM,WAAW,gBAAgB;IAC/B;;OAEG;IACH,IAAI,EAAE,MAAM,CAAC;IACb;;;OAGG;IACH,KAAK,EAAE,MAAM,CAAC;CACf;AAED,MAAM,WAAW,qBAAqB;IACpC;;OAEG;IACH,UAAU,EAAE,gBAAgB,CAAC;IAC7B;;;;;;OAMG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB;;;;OAIG;IACH,cAAc,CAAC,EAAE,cAAc,CAAC;IAChC;;OAEG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;CACjB"}
\ No newline at end of file
+{"version":3,"file":"Config.d.ts","sourceRoot":"","sources":["../src/Config.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAElE,MAAM,WAAW,gBAAgB;IAC/B;;OAEG;IACH,IAAI,EAAE,MAAM,CAAC;IACb;;;OAGG;IACH,KAAK,EAAE,MAAM,CAAC;CACf;AAED,MAAM,WAAW,qBAAqB;IACpC;;OAEG;IACH,UAAU,EAAE,gBAAgB,CAAC;IAC7B;;;;;;OAMG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB;;;;OAIG;IACH,cAAc,CAAC,EAAE,cAAc,CAAC;IAChC;;OAEG;IACH,UAAU,CAAC,EAAE,OAAO,CAAC;IACrB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB;;OAEG;IACH,KAAK,CAAC,EAAE,OAAO,CAAC;IAChB;;OAEG;IACH,oBAAoB,CAAC,EAAE,OAAO,CAAC;CAChC"}
\ No newline at end of file
diff --git a/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.d.ts.map b/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.d.ts.map
index 030e67c..63a31a0 100644
--- a/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.d.ts.map
+++ b/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"PublisherGithub.d.ts","sourceRoot":"","sources":["../src/PublisherGithub.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAMjF,OAAO,EAAE,qBAAqB,EAAE,MAAM,UAAU,CAAC;AAYjD,MAAM,CAAC,OAAO,OAAO,eAAgB,SAAQ,aAAa,CAAC,qBAAqB,CAAC;IAC/E,IAAI,SAAY;IAEV,OAAO,CAAC,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,gBAAgB,GAAG,OAAO,CAAC,IAAI,CAAC;CA+G/E;AAED,OAAO,EAAE,eAAe,EAAE,qBAAqB,EAAE,CAAC"}
\ No newline at end of file
+{"version":3,"file":"PublisherGithub.d.ts","sourceRoot":"","sources":["../src/PublisherGithub.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AASjF,OAAO,EAAE,qBAAqB,EAAE,MAAM,UAAU,CAAC;AAYjD,MAAM,CAAC,OAAO,OAAO,eAAgB,SAAQ,aAAa,CAAC,qBAAqB,CAAC;IAC/E,IAAI,SAAY;IAEV,OAAO,CAAC,EAAE,WAAW,EAAE,aAAa,EAAE,EAAE,gBAAgB,GAAG,OAAO,CAAC,IAAI,CAAC;CAgI/E;AAED,OAAO,EAAE,eAAe,EAAE,qBAAqB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.js b/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.js
index b75fe5f..c6cd763 100644
--- a/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.js
+++ b/node_modules/@electron-forge/publisher-github/dist/PublisherGithub.js
@@ -4,8 +4,12 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.PublisherGithub = void 0;
+const path_1 = __importDefault(require("path"));
 const publisher_base_1 = require("@electron-forge/publisher-base");
+const request_error_1 = require("@octokit/request-error");
+const chalk_1 = __importDefault(require("chalk"));
 const fs_extra_1 = __importDefault(require("fs-extra"));
+const log_symbols_1 = __importDefault(require("log-symbols"));
 const mime_types_1 = __importDefault(require("mime-types"));
 const github_1 = __importDefault(require("./util/github"));
 const no_release_error_1 = __importDefault(require("./util/no-release-error"));
@@ -54,6 +58,7 @@ class PublisherGithub extends publisher_base_1.PublisherBase {
                         name: releaseName,
                         draft: config.draft !== false,
                         prerelease: config.prerelease === true,
+                        generate_release_notes: config.generateReleaseNotes === true,
                     })).data;
                 }
                 else {
@@ -73,9 +78,10 @@ class PublisherGithub extends publisher_base_1.PublisherBase {
                     uploaded += 1;
                     updateUploadStatus();
                 };
-                const artifactName = github_1.default.sanitizeName(artifactPath);
+                const artifactName = path_1.default.basename(artifactPath);
+                const sanitizedArtifactName = github_1.default.sanitizeName(artifactName);
                 // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-                const asset = release.assets.find((item) => item.name === artifactName);
+                const asset = release.assets.find((item) => item.name === sanitizedArtifactName);
                 if (asset !== undefined) {
                     if (config.force === true) {
                         await github.getGitHub().repos.deleteReleaseAsset({
@@ -88,21 +94,37 @@ class PublisherGithub extends publisher_base_1.PublisherBase {
                         return done();
                     }
                 }
-                await github.getGitHub().repos.uploadReleaseAsset({
-                    owner: config.repository.owner,
-                    repo: config.repository.name,
-                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-                    release_id: release.id,
-                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-                    url: release.upload_url,
-                    // https://github.com/octokit/rest.js/issues/1645
-                    data: (await fs_extra_1.default.readFile(artifactPath)),
-                    headers: {
-                        'content-type': mime_types_1.default.lookup(artifactPath) || 'application/octet-stream',
-                        'content-length': (await fs_extra_1.default.stat(artifactPath)).size,
-                    },
-                    name: artifactName,
-                });
+                try {
+                    const { data: uploadedAsset } = await github.getGitHub().repos.uploadReleaseAsset({
+                        owner: config.repository.owner,
+                        repo: config.repository.name,
+                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                        release_id: release.id,
+                        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                        url: release.upload_url,
+                        // https://github.com/octokit/rest.js/issues/1645
+                        data: (await fs_extra_1.default.readFile(artifactPath)),
+                        headers: {
+                            'content-type': mime_types_1.default.lookup(artifactPath) || 'application/octet-stream',
+                            'content-length': (await fs_extra_1.default.stat(artifactPath)).size,
+                        },
+                        name: artifactName,
+                    });
+                    if (uploadedAsset.name !== sanitizedArtifactName) {
+                        // There's definitely a bug with GitHub.sanitizeName
+                        console.warn(log_symbols_1.default.warning, chalk_1.default.yellow(`Expected artifact's name to be '${sanitizedArtifactName}' - got '${uploadedAsset.name}'`));
+                    }
+                }
+                catch (err) {
+                    // If an asset with that name already exists, it's either a bug with GitHub.sanitizeName
+                    // where it did not sanitize the artifact name in the same way as GitHub did, or there
+                    // was simply a race condition with uploading artifacts with the same name
+                    // eslint-disable-next-line @typescript-eslint/no-explicit-any
+                    if (err instanceof request_error_1.RequestError && err.status === 422 && err.response?.data?.errors?.[0].code === 'already_exists') {
+                        console.error(`Asset with name '${artifactName} already exists - there may be a bug with GitHub.sanitizeName`);
+                    }
+                    throw err;
+                }
                 return done();
             }));
         }
@@ -110,4 +132,4 @@ class PublisherGithub extends publisher_base_1.PublisherBase {
 }
 exports.default = PublisherGithub;
 exports.PublisherGithub = PublisherGithub;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHVibGlzaGVyR2l0aHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1B1Ymxpc2hlckdpdGh1Yi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxtRUFBaUY7QUFHakYsd0RBQTBCO0FBQzFCLDREQUE4QjtBQUc5QiwyREFBbUM7QUFDbkMsK0VBQXFEO0FBVXJELE1BQXFCLGVBQWdCLFNBQVEsOEJBQW9DO0lBQWpGOztRQUNFLFNBQUksR0FBRyxRQUFRLENBQUM7SUFpSGxCLENBQUM7SUEvR0MsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFFLFdBQVcsRUFBRSxhQUFhLEVBQW9CO1FBQzVELE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUM7UUFFeEIsTUFBTSxtQkFBbUIsR0FFckIsRUFBRSxDQUFDO1FBRVAsS0FBSyxNQUFNLFVBQVUsSUFBSSxXQUFXLEVBQUU7WUFDcEMsTUFBTSxPQUFPLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUM7WUFDL0MsSUFBSSxDQUFDLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNqQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDbkM7WUFDRCxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDL0M7UUFFRCxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxJQUFJLE9BQU8sTUFBTSxDQUFDLFVBQVUsS0FBSyxRQUFRLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUN0SCxNQUFNLElBQUksS0FBSyxDQUNiLHNKQUFzSixDQUN2SixDQUFDO1NBQ0g7UUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLGdCQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLGNB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHVibGlzaGVyR2l0aHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1B1Ymxpc2hlckdpdGh1Yi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxnREFBd0I7QUFFeEIsbUVBQWlGO0FBRWpGLDBEQUFzRDtBQUV0RCxrREFBMEI7QUFDMUIsd0RBQTBCO0FBQzFCLDhEQUFxQztBQUNyQyw0REFBOEI7QUFHOUIsMkRBQW1DO0FBQ25DLCtFQUFxRDtBQVVyRCxNQUFxQixlQUFnQixTQUFRLDhCQUFvQztJQUFqRjs7UUFDRSxTQUFJLEdBQUcsUUFBUSxDQUFDO0lBa0lsQixDQUFDO0lBaElDLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxXQUFXLEVBQUUsYUFBYSxFQUFvQjtRQUM1RCxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDO1FBRXhCLE1BQU0sbUJBQW1CLEdBRXJCLEVBQUUsQ0FBQztRQUVQLEtBQUssTUFBTSxVQUFVLElBQUksV0FBVyxFQUFFO1lBQ3BDLE1BQU0sT0FBTyxHQUFHLFVBQVUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDO1lBQy9DLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDakMsbUJBQW1CLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDO2FBQ25DO1lBQ0QsbUJBQW1CLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQy9DO1FBRUQsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsSUFBSSxPQUFPLE1BQU0sQ0FBQyxVQUFVLEtBQUssUUFBUSxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDdEgsTUFBTSxJQUFJLEtBQUssQ0FDYixzSkFBc0osQ0FDdkosQ0FBQztTQUNIO1FBRUQsTUFBTSxNQUFNLEdBQUcsSUFBSSxn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
\ No newline at end of file
diff --git a/node_modules/@electron-forge/publisher-github/dist/util/github.js b/node_modules/@electron-forge/publisher-github/dist/util/github.js
index 76d99cc..a9d9e1f 100644
--- a/node_modules/@electron-forge/publisher-github/dist/util/github.js
+++ b/node_modules/@electron-forge/publisher-github/dist/util/github.js
@@ -51,8 +51,8 @@ class GitHub {
             .replace(/\.+/g, '.')
             .replace(/^\./g, '')
             .replace(/\.$/g, '')
-            .replace(/[^\w.-]+/g, '-');
+            .replace(/[^\w.-@+]+/g, '.');
     }
 }
 exports.default = GitHub;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZ2l0aHViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsZ0RBQXdCO0FBR3hCLHdEQUE4QztBQUM5Qyx3Q0FBd0M7QUFDeEMsa0RBQTBCO0FBRTFCLE1BQU0sT0FBTyxHQUFHLElBQUEsZUFBSyxFQUFDLHNDQUFzQyxDQUFDLENBQUM7QUFDOUQsTUFBTSxRQUFRLEdBQUcsSUFBQSxlQUFLLEVBQUMsdUNBQXVDLENBQUMsQ0FBQztBQUVoRSxNQUFxQixNQUFNO0lBS3pCLFlBQVksWUFBZ0MsU0FBUyxFQUFFLFdBQVcsR0FBRyxLQUFLLEVBQUUsVUFBMEIsRUFBRTtRQUN0RyxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUU7WUFDaEIsZ0NBQWdDO1FBQ2xDLENBQUMsQ0FBQztRQUVGLElBQUksQ0FBQyxPQUFPLEdBQUc7WUFDYixHQUFHLE9BQU87WUFDVixHQUFHLEVBQUU7Z0JBQ0gsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSTtnQkFDekMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO2dCQUNwQixJQUFJLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJO2dCQUN0QyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7YUFDbkI7WUFDRCxTQUFTLEVBQUUsZ0JBQWdCO1NBQzVCLENBQUM7UUFFRixJQUFJLFNBQVMsRUFBRTtZQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1NBQ3hCO2FBQU0sSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRTtZQUNuQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDO1NBQ3ZDO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRUFBc0UsQ0FBQyxDQUFDO1NBQ3pGO0lBQ0gsQ0FBQztJQUVELFNBQVM7UUFDUCxNQUFNLE9BQU8sR0FBbUIsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwRCxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7U0FDM0I7UUFDRCxNQUFNLGdCQUFnQixHQUFHLGNBQU8sQ0FBQyxNQUFNLENBQUMsb0JBQUssQ0FBQyxDQUFDO1FBQy9DLE1BQU0sTUFBTSxHQUFHLElBQUksZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0MsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELDRHQUE0RztJQUM1RyxzR0FBc0c7SUFDdEcsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFZO1FBQzlCLE9BQU8sY0FBSTthQUNSLFFBQVEsQ0FBQyxJQUFJLENBQUM7YUFDZCxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQzthQUNwQixPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQzthQUNuQixPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQzthQUNuQixPQUFPLENBQUMsV0FBVyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7Q0FDRjtBQWxERCx5QkFrREMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWwvZ2l0aHViLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsZ0RBQXdCO0FBR3hCLHdEQUE4QztBQUM5Qyx3Q0FBd0M7QUFDeEMsa0RBQTBCO0FBRTFCLE1BQU0sT0FBTyxHQUFHLElBQUEsZUFBSyxFQUFDLHNDQUFzQyxDQUFDLENBQUM7QUFDOUQsTUFBTSxRQUFRLEdBQUcsSUFBQSxlQUFLLEVBQUMsdUNBQXVDLENBQUMsQ0FBQztBQUVoRSxNQUFxQixNQUFNO0lBS3pCLFlBQVksWUFBZ0MsU0FBUyxFQUFFLFdBQVcsR0FBRyxLQUFLLEVBQUUsVUFBMEIsRUFBRTtRQUN0RyxNQUFNLElBQUksR0FBRyxHQUFHLEVBQUU7WUFDaEIsZ0NBQWdDO1FBQ2xDLENBQUMsQ0FBQztRQUVGLElBQUksQ0FBQyxPQUFPLEdBQUc7WUFDYixHQUFHLE9BQU87WUFDVixHQUFHLEVBQUU7Z0JBQ0gsS0FBSyxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSTtnQkFDekMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLO2dCQUNwQixJQUFJLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJO2dCQUN0QyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUk7YUFDbkI7WUFDRCxTQUFTLEVBQUUsZ0JBQWdCO1NBQzVCLENBQUM7UUFFRixJQUFJLFNBQVMsRUFBRTtZQUNiLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDO1NBQ3hCO2FBQU0sSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRTtZQUNuQyxJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxDQUFDO1NBQ3ZDO2FBQU0sSUFBSSxXQUFXLEVBQUU7WUFDdEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRUFBc0UsQ0FBQyxDQUFDO1NBQ3pGO0lBQ0gsQ0FBQztJQUVELFNBQVM7UUFDUCxNQUFNLE9BQU8sR0FBbUIsRUFBRSxHQUFHLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwRCxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxPQUFPLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7U0FDM0I7UUFDRCxNQUFNLGdCQUFnQixHQUFHLGNBQU8sQ0FBQyxNQUFNLENBQUMsb0JBQUssQ0FBQyxDQUFDO1FBQy9DLE1BQU0sTUFBTSxHQUFHLElBQUksZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDN0MsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELDRHQUE0RztJQUM1RyxzR0FBc0c7SUFDdEcsTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFZO1FBQzlCLE9BQU8sY0FBSTthQUNSLFFBQVEsQ0FBQyxJQUFJLENBQUM7YUFDZCxPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQzthQUNwQixPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQzthQUNuQixPQUFPLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQzthQUNuQixPQUFPLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Q0FDRjtBQWxERCx5QkFrREMifQ==
\ No newline at end of file
diff --git a/node_modules/@electron-forge/publisher-github/src/PublisherGithub.ts b/node_modules/@electron-forge/publisher-github/src/PublisherGithub.ts
index 82249d8..bb38671 100644
--- a/node_modules/@electron-forge/publisher-github/src/PublisherGithub.ts
+++ b/node_modules/@electron-forge/publisher-github/src/PublisherGithub.ts
@@ -1,7 +1,12 @@
+import path from 'path';
+
 import { PublisherBase, PublisherOptions } from '@electron-forge/publisher-base';
 import { ForgeMakeResult } from '@electron-forge/shared-types';
+import { RequestError } from '@octokit/request-error';
 import { GetResponseDataTypeFromEndpointMethod } from '@octokit/types';
+import chalk from 'chalk';
 import fs from 'fs-extra';
+import logSymbols from 'log-symbols';
 import mime from 'mime-types';
 
 import { PublisherGitHubConfig } from './Config';
@@ -96,9 +101,10 @@ export default class PublisherGithub extends PublisherBase<PublisherGitHubConfig
               uploaded += 1;
               updateUploadStatus();
             };
-            const artifactName = GitHub.sanitizeName(artifactPath);
+            const artifactName = path.basename(artifactPath);
+            const sanitizedArtifactName = GitHub.sanitizeName(artifactName);
             // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-            const asset = release!.assets.find((item: OctokitReleaseAsset) => item.name === artifactName);
+            const asset = release!.assets.find((item: OctokitReleaseAsset) => item.name === sanitizedArtifactName);
             if (asset !== undefined) {
               if (config.force === true) {
                 await github.getGitHub().repos.deleteReleaseAsset({
@@ -110,21 +116,36 @@ export default class PublisherGithub extends PublisherBase<PublisherGitHubConfig
                 return done();
               }
             }
-            await github.getGitHub().repos.uploadReleaseAsset({
-              owner: config.repository.owner,
-              repo: config.repository.name,
-              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-              release_id: release!.id,
-              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
-              url: release!.upload_url,
-              // https://github.com/octokit/rest.js/issues/1645
-              data: (await fs.readFile(artifactPath)) as unknown as string,
-              headers: {
-                'content-type': mime.lookup(artifactPath) || 'application/octet-stream',
-                'content-length': (await fs.stat(artifactPath)).size,
-              },
-              name: artifactName,
-            });
+            try {
+              const { data: uploadedAsset } = await github.getGitHub().repos.uploadReleaseAsset({
+                owner: config.repository.owner,
+                repo: config.repository.name,
+                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                release_id: release!.id,
+                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
+                url: release!.upload_url,
+                // https://github.com/octokit/rest.js/issues/1645
+                data: (await fs.readFile(artifactPath)) as unknown as string,
+                headers: {
+                  'content-type': mime.lookup(artifactPath) || 'application/octet-stream',
+                  'content-length': (await fs.stat(artifactPath)).size,
+                },
+                name: artifactName,
+              });
+              if (uploadedAsset.name !== sanitizedArtifactName) {
+                // There's definitely a bug with GitHub.sanitizeName
+                console.warn(logSymbols.warning, chalk.yellow(`Expected artifact's name to be '${sanitizedArtifactName}' - got '${uploadedAsset.name}'`));
+              }
+            } catch (err) {
+              // If an asset with that name already exists, it's either a bug with GitHub.sanitizeName
+              // where it did not sanitize the artifact name in the same way as GitHub did, or there
+              // was simply a race condition with uploading artifacts with the same name
+              // eslint-disable-next-line @typescript-eslint/no-explicit-any
+              if (err instanceof RequestError && err.status === 422 && (err.response?.data as any)?.errors?.[0].code === 'already_exists') {
+                console.error(`Asset with name '${artifactName} already exists - there may be a bug with GitHub.sanitizeName`);
+              }
+              throw err;
+            }
             return done();
           })
       );
diff --git a/node_modules/@electron-forge/publisher-github/src/util/github.ts b/node_modules/@electron-forge/publisher-github/src/util/github.ts
index 6742462..29a3c6c 100644
--- a/node_modules/@electron-forge/publisher-github/src/util/github.ts
+++ b/node_modules/@electron-forge/publisher-github/src/util/github.ts
@@ -53,9 +53,9 @@ export default class GitHub {
   static sanitizeName(name: string): string {
     return path
       .basename(name)
+      .replace(/[^\w.@+-]+/g, '.')
       .replace(/\.+/g, '.')
       .replace(/^\./g, '')
-      .replace(/\.$/g, '')
-      .replace(/[^\w.-]+/g, '-');
+      .replace(/\.$/g, '');
   }
 }
